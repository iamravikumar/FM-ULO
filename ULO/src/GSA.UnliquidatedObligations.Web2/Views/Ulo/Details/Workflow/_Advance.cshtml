@model GSA.UnliquidatedObligations.Web.Models.AdvanceViewModel
<partial name="_MyJustifications" />

@Html.HiddenFor(model => model.UnliqudatedWorkflowQuestionsId)

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">Decision</h3>
    </div>
    <div class="panel-body">
        <div class="form-group">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @if (Model.IsValid.HasValue)
            {
                <div class="row" style="font-weight:bold; padding-top: 5px">
                    @if (Model.IsValid.Value)
                    {
                        <text>@Model.PDN was marked as valid.</text>
                    }
                    else
                    {
                        <text>@Model.PDN was marked as invalid.</text>
                    }
                </div>
            }
        </div>
        <div class="form-group">
            <label asp-for="Answer">@(Model.QuestionLabel)</label><br />
            @Html.DropDownListFor(model => model.Answer, Model.QuestionChoices.CreateSelectListItems(), htmlAttributes: new { id = "q", required = "required", @onchange = "ChoiceChange()", @class="form-control" })
            @Html.ValidationMessageFor(model => model.Answer, "Must select an Answer", new { id = "validateAnswerMessage", @class = "text-danger" })
        </div>
        <div class="form-group" style="display:none">
            <label asp-for="@(Model.JustificationKey)">Justification</label><br />
            @Html.DropDownListFor(model => model.JustificationKey, new SelectList(new object[] { }), AspHelpers.PleaseSelectOne, htmlAttributes: new { id = "justifications", mrjk = Model.JustificationKey, @onchange = "clearJustificationValidationErrors()", @class="form-control" })
            @Html.ValidationMessageFor(model => model.JustificationKey, "Must select a Justification", new { id = "validateJustificationMessage", @class = "text-danger" })
        </div>
        <div class="form-group" id="expectedDateForCompletionContainer" style="display:none">
            <label asp-for="ExpectedDateForCompletion">Expected Date for Completion/Resolution</label>
            <input type="date" id="advanceExpectedDateForCompletion" class="form-control" asp-for="ExpectedDateForCompletion" onchange = "clearDateValidationErrors()" />
            @Html.ValidationMessageFor(model => model.ExpectedDateForCompletion, "Must select Expected Date of Completion", new { id = "validateExpectedDateMessage", @class = "text-danger" })
            @Html.HiddenFor(model => model.ExpectedDateForCompletionEditable)
        </div>
        <div class="form-group">
            <label asp-for="Comments">Comments</label>
            <textarea maxlength="4000" id="advanceCommentsBox" rows="10" asp-for="Comments" class="form-control"></textarea>
            @Html.ValidationMessageFor(model => model.Comments, "Must enter Comment when Other is selected", new { id = "validateCommentMessage", @class = "text-danger" })
            @Html.ValidationMessageFor(model => model.Comments, "Maximum comment size is 4000", new { id = "validateCommentMessageMax", @class = "text-danger", style = "display:none" })
            <small>
                <span id="advanceCommentsBoxRemainingCharacters"></span><span id="advanceCommentsBoxRemainingCharactersSuffix"></span>
            </small>
        </div>
        <div class="form-group">
            @Html.HiddenFor(model => model.WorkflowRowVersionString)
            @Html.HiddenFor(model => model.EditingBeganAtUtc)
            <input type="submit" value="Save" name="WhatNext" class="btn btn-default" onclick="allowSubmitWithoutRequiredValidations();" />
            <input type="submit" value="Submit" name="WhatNext" class="btn btn-primary confirm-on-click" confirmMessage="Are you sure you're ready to submit?" />
        </div>
    </div>
</div>

<script type="text/javascript" later>
    var pleaseSelectOneMessage = "@AspHelpers.PleaseSelectOne";
    $(document).ready(function () {
        advanceCommentsBoxInputHappened();
        $("#advanceCommentsBox").on("input", advanceCommentsBoxInputHappened);
        ChoiceChange();
    });
    function advanceCommentsBoxInputHappened() {
        var len = $("#advanceCommentsBox").val().length;
        var remaining = 4000 - len;
        $("#advanceCommentsBoxRemainingCharacters").text(remaining);
        $("#advanceCommentsBoxRemainingCharactersSuffix").text(remaining == 1 ? " character remains." : " characters remain.");
    }
    function allowSubmitWithoutRequiredValidations()
    {
        $('#q').removeAttr('required').removeAttr('aria-required');
    }
</script>
