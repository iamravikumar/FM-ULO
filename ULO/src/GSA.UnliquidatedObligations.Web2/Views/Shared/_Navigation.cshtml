@using GSA.UnliquidatedObligations.BusinessLayer.Authorization
@using GSA.UnliquidatedObligations.Web.Controllers
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container-fluid">
        <div class="navbar-header">
            <h1 class="navbar-brand" style="padding:0;margin-right:10px">
                <img src="~/images/favicon.png" width="71" height="71" alt="GSA Logo" style="display:inline" />
                ULO
            </h1>
        </div>
        <div class="navbar-collapse collapse">
            <div style="height:57px; margin: 7px;">
                &nbsp;
                @if (User.Identity.IsAuthenticated && UserHelpers.HasPermission(User, ApplicationPermissionNames.ApplicationUser))
            {
                    <ul class="nav navbar-nav">
                        @{
                            PageKeys pageKey = PageKeys.UndefinedPageKey;
                            try
                            {
                                if (ViewBag.PageKey != null)
                                {
                                    pageKey = (PageKeys)ViewBag.PageKey;
                                }
                            }
                            catch (Exception)
                            { }
                            var apka = (object)new { @@class = "current" };
                            var ipka = (object)new { };
                        }
                        <li>@Html.ActionLink("My Tasks", UloController.ActionNames.MyTasks, UloController.Name, null, pageKey == PageKeys.MyTasks ? apka : ipka)</li>
                        @if (UserHelpers.HasPermission(User, ApplicationPermissionNames.CanViewUnassigned))
                {
                            <li>@Html.ActionLink("Unassigned", UloController.ActionNames.Unassigned, UloController.Name, null, pageKey == PageKeys.Unassigned ? apka : ipka)</li>
                        }
                        @if (UserHelpers.HasPermission(User, ApplicationPermissionNames.CanViewOtherWorkflows))
                {
                            <li>@Html.ActionLink("Search", UloController.ActionNames.Search, UloController.Name, null, pageKey == PageKeys.Search ? apka : ipka)</li>
                        }
                        @if (UserHelpers.HasPermission(User, ApplicationPermissionNames.CanExecuteReports))
                {
                            <li>@Html.ActionLink("Reports", ReportsController.ActionNames.ListReports, ReportsController.Name, null, pageKey == PageKeys.Reports ? apka : ipka)</li>
                        }
                        @if (UserHelpers.HasPermission(User, ApplicationPermissionNames.CanReassign))
                {
                            <li>@Html.ActionLink("Reassignments", UloController.ActionNames.RequestForReassignments, UloController.Name, null, pageKey == PageKeys.ReassignmentRequests ? apka : ipka)</li>
                        }
                        @if (UserHelpers.HasPermission(User, ApplicationPermissionNames.CanViewReviews))
                {
                            <li>@Html.ActionLink("Reviews", ReviewsController.ActionNames.Index, ReviewsController.Name, null, pageKey == PageKeys.ManageReviews ? apka : ipka)</li>
                        }
                        @if (UserHelpers.HasPermission(User, ApplicationPermissionNames.CanViewReviews))
                {
                            <li>@Html.ActionLink("Excluded", PdnController.ActionNames.Index, PdnController.Name, null, pageKey == PageKeys.PdnAttributes ? apka : ipka)</li>
                        }
                        @if (UserHelpers.HasPermission(User,ApplicationPermissionNames.ManageUsers)|| UserHelpers.HasPermission(User,ApplicationPermissionNames.ViewUsers))
                        {
                            <li>@Html.ActionLink("Users", UsersController.ActionNames.Index, UsersController.Name, null, pageKey == PageKeys.ManageUsers ? apka : ipka)</li>
                        }
                    </ul>
                            }
            <partial name="_LoginPartial" />
            </div>
        </div>
    </div>
</div>