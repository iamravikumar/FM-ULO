@using RevolutionaryStuff.Core;
@using GSA.UnliquidatedObligations.BusinessLayer.Data.Reporting;
@using GSA.UnliquidatedObligations.Web.Models;
@using GSA.UnliquidatedObligations.Web.Controllers;
@model ConfigureReportModel
@{
    var rd = Model.Description;
    ViewBag.Title = rd.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
    this.SetTitles(PageKeys.Reports, rd.Title, rd.Description);
}

    <form asp-action="@ReportsController.ActionNames.ExecuteReport" asp-route-name="@rd.Name" method="post" class="inline-form" role="form">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @foreach (var p in rd.Parameters.Where(z => !z.IsHardcoded))
        {
            string htmlInputType;
            if (p.ClrType.IsNumber())
            {
                htmlInputType = "number";
            }
            if (p.ClrType == typeof(DateTime))
            {
                htmlInputType = "date";
            }
            else
            {
                htmlInputType = "text";
            }
            <div class="form-group">
                <label for="@p.SqlParameterName">@p.Title</label>
                @{
                    IEnumerable<SelectListItem> items = null;
                    switch (p.ReportParameterRenderHint)
                    {
                        case ReportParameterRenderHints.Region:
                            items = Model.RegionItems;
                            break;
                        case ReportParameterRenderHints.Review:
                            items = Model.ReviewItems;
                            break;
                        case ReportParameterRenderHints.TextArea:
                            <textarea class="form-control" name="@p.SqlParameterName"></textarea>
                            break;
                        case ReportParameterRenderHints.Standard:
                        default:
                            <input class="form-control" name="@p.SqlParameterName" type="@htmlInputType" required="required" />
                            break;
                    }
                    if (items != null)
                    {
                        @Html.DropDownList(p.SqlParameterName, items, AspHelpers.PleaseSelectOne, new { required = "required" });
                    }
                }
            </div>
        }
        @if (UserHelpers.HasPermission(User,ApplicationPermissionNames.CanScheduleReports))
        {
            <div class="form-group">
                <label for="Recipients">Recipients</label>
                <textarea id="Recipients"></textarea>
            </div>
            <partial name="~/Views/Shared/_BasicRecurrenceSettingsPartial.cshtml" model="@Model.RecurrenceSettings" />
        }
        <input type="submit" value="Execute" class="btn btn-default btn-primary btn-large" />
    </form>