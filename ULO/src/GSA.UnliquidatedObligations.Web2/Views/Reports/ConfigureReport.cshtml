@using RevolutionaryStuff.Core;
@using GSA.UnliquidatedObligations.BusinessLayer.Data.Reporting;
@using GSA.UnliquidatedObligations.Web.Models;
@using GSA.UnliquidatedObligations.Web.Controllers;
@model ConfigureReportModel
@{
    var rd = Model.Description;
    ViewBag.Title = rd.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
    this.SetTitles(PageKeys.Reports, rd.Title, rd.Description);
}

<form asp-action="@ReportsController.ActionNames.ExecuteReport" asp-route-name="@rd.Name" method="post" class="inline-form" role="form">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @foreach (var p in rd.Parameters.Where(z => !z.IsHardcoded))
    {
        string htmlInputType;
        if (p.ClrType.IsNumber())
        {
            htmlInputType = "number";
        }
        if (p.ClrType == typeof(DateTime))
        {
            htmlInputType = "date";
        }
        else
        {
            htmlInputType = "text";
        }
        <div class="form-group">
            <label for="@ReportsController.ReportParameterNamePrefix@p.SqlParameterName">@p.Title</label>
            @{
                IEnumerable<SelectListItem> items = null;
                switch (p.ReportParameterRenderHint)
                {
                    case ReportParameterRenderHints.Region:
                        items = Model.RegionItems;
                        break;
                    case ReportParameterRenderHints.Review:
                        items = Model.ReviewItems;
                        break;
                    case ReportParameterRenderHints.TextArea:
                        <textarea class="form-control" name="@ReportsController.ReportParameterNamePrefix@p.SqlParameterName"></textarea>
                        break;
                    case ReportParameterRenderHints.Standard:
                    default:
                        <input class="form-control" name="@ReportsController.ReportParameterNamePrefix@p.SqlParameterName" type="@htmlInputType" required="required" />
                        break;
                }
                if (items != null)
                {
                    <br />
                    @Html.DropDownList(ReportsController.ReportParameterNamePrefix + p.SqlParameterName, items, AspHelpers.PleaseSelectOne, new { required = "required", @class = "form-control" });
                }
            }
        </div>
    }
    <div class="form-group">
        <label for="frequency" style="display:block">Frequency</label>
        <label style="display:block"><input type="radio" name="frequency" value="@ReportsController.ReportFrequencies.EmailMeOnce" checked="checked" onchange="$('.recurring').hide()" /> Once, and email me the results</label>
        <label style="display:block"><input type="radio" name="frequency" value="@ReportsController.ReportFrequencies.Synchronous" onchange="$('.recurring').hide()" /> Once, and wait for the results so I can download them from this page</label>
        @if (UserHelpers.HasPermission(User, GSA.UnliquidatedObligations.BusinessLayer.Authorization.ApplicationPermissionNames.CanScheduleReports))
        {
            <label style="display:block"><input type="radio" name="frequency" value="@ReportsController.ReportFrequencies.Recurring" onchange="$('.recurring').show()" /> Recurring, and email the results</label>
        }
    </div>
    <div style="padding-left:25px">
        <div class="form-group recurring" style="display:none">
            <label for="recipients">Recipients (separate with ';')</label>
            <textarea class="form-control" name="recipients">@Model.CurrentUserEmail</textarea>
        </div>
        <div class="form-group recurring" style="display:none">
            <label for="time">Time of day</label>
            <input name="time" class="form-control" type="time" value="06:00" />
            <small>Time is interpreted as being in @PortalHelpers.DisplayTimeZone</small>
        </div>
        <div class="form-group recurringZ" style="display:none">
            <label for="cron" title="Will be used instead of Time of Day if not empty">CRON recurrence string</label>
            <input name="cron" class="form-control" type="text" />
        </div>
        <div class="form-group recurring" style="display:none">
            <label for="userNote">Note to accompany email body</label>
            <textarea name="userNote" class="form-control"></textarea>
        </div>
    </div>
    <input type="submit" value="Execute" class="btn btn-default btn-primary btn-large" />
</form>